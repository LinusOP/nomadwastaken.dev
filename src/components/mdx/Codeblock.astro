---
interface Props {
  "data-language": string;
}

const code = await Astro.slots.render("default");
const { "data-language": lang } = Astro.props;
---

<div is="fancy-code-block" class="rounded-md bg-stone-900">
  <div class="flex items-center border-b border-stone-600 p-2">
    <span class="text-sm text-stone-400">{lang}</span>
    <button
      class="group ml-auto cursor-pointer"
      data-copied="false"
      title="Copy to clipboard"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-clipboard-icon lucide-clipboard hidden group-data-[copied=false]:block"
        ><rect width="8" height="4" x="8" y="2" rx="1" ry="1"></rect><path
          d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        ></path></svg
      >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-clipboard-check-icon lucide-clipboard-check hidden group-data-[copied=true]:block"
        ><rect width="8" height="4" x="8" y="2" rx="1" ry="1"></rect><path
          d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
        ></path><path d="m9 14 2 2 4-4"></path></svg
      >
    </button>
  </div>
  <div class="overflow-x-auto p-3 pt-2">
    <pre class=`not-prose`><Fragment set:html={code} /></pre>
  </div>
</div>

<script>
  class FancyCodeBlock extends HTMLDivElement {
    constructor() {
      super();

      const copyButton = this.querySelector("button")!;
      const codeBlock = this.querySelector("pre")!;

      copyButton.addEventListener("click", async () => {
        await navigator.clipboard.writeText(codeBlock.innerText);

        copyButton.dataset.copied = "true";
        setTimeout(() => {
          copyButton.dataset.copied = "false";
        }, 3000);
      });
    }
  }

  customElements.define("fancy-code-block", FancyCodeBlock, {
    extends: "div",
  });
</script>
